name: persimmon-api-cloud-run
 
on:
  push:
    branches:
      - develop
  workflow_dispatch:
    inputs:
      secret_input:
        description: 'Provide the secret value'
        required: true 
env:
  PROJECT_ID: ${{ secrets.CLOUD_RUN_PROJECT_NAME }}
  REGION_PROD: us-west2
  REGION_STAGE: us-west1
  REPO_NAME: persimmon-api
  REPO_NAME_STAGE: persimmon-api-stage
 
jobs:
  build-and-deploy-prod:
    name: Setup, Build, and Deploy
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Compare secret value
        run: |
          if [[ "${{ github.event.inputs.secret_input }}" != "${{ secrets.USER_INPUT }}" ]]; then
            echo "Secret values do not match. Exiting..."
            exit 1
          fi
          echo "Secret values match, proceeding with the job..."

      - name: Compare secret matched
        run: echo "Secret values match, proceeding with the job..." 
      - id: "auth"
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: "${{ secrets.CLOUD_RUN_SERVICE_ACCOUNT }}"
 
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
 
      - name: Enable component beta
        run: gcloud components install beta
 
      - name: Use gcloud CLI
        run: gcloud info
 
      - name: What is gcloud version?
        run: gcloud --version
 
      - name: Authorize Docker push
        run: gcloud auth configure-docker
 
      - name: Build and tag the docker image
        run: |-
          docker build backend --tag gcr.io/$PROJECT_ID/$REPO_NAME:$GITHUB_SHA
 
      - name: Push the image to the Google Container Registry (GCR)
        run: |-
          docker push gcr.io/$PROJECT_ID/$REPO_NAME:$GITHUB_SHA
          
      - name: Deploy
        run: |-
          gcloud run deploy $REPO_NAME \
          --region $REGION_PROD \
          --image gcr.io/$PROJECT_ID/$REPO_NAME:$GITHUB_SHA \
          --port 8000 \
          --platform "managed" \
          --allow-unauthenticated \

  build-and-deploy-stage:
    name: Setup, Build, and Deploy
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
          
      - name: Compare secret matched
        run: echo "Secret values match, proceeding with the job..." 
      - id: "auth"
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: "${{ secrets.CLOUD_RUN_SERVICE_ACCOUNT }}"
 
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
 
      - name: Enable component beta
        run: gcloud components install beta
 
      - name: Use gcloud CLI
        run: gcloud info
 
      - name: What is gcloud version?
        run: gcloud --version
 
      - name: Authorize Docker push
        run: gcloud auth configure-docker
 
      - name: Build and tag the docker image
        run: |-
          docker build backend --tag gcr.io/$PROJECT_ID/$REPO_NAME_STAGE:$GITHUB_SHA
 
      - name: Push the image to the Google Container Registry (GCR)
        run: |-
          docker push gcr.io/$PROJECT_ID/$REPO_NAME_STAGE:$GITHUB_SHA
          
      - name: Deploy
        run: |-
          gcloud run deploy $REPO_NAME_STAGE \
          --region $REGION_STAGE \
          --image gcr.io/$PROJECT_ID/$REPO_NAME_STAGE:$GITHUB_SHA \
          --port 8000 \
          --platform "managed" \
          --allow-unauthenticated \